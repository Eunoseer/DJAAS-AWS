AWSTemplateFormatVersion: '2010-09-09'
Description: Dad jokes as a service
Parameters:
  pAssetS3BucketName:
    Type: String
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: '[a-zA-Z0-9_-]+'
    Default: djaas-main

  # DynamoDB
  pDynamoDBTableName:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    AllowedPattern: '[a-zA-Z0-9_.-]+'
    Description: 'The name of the Dad Jokes DynamoDB Table'
    Default: Dad_Jokes
  pDynamoDBPKName:
    Type: String
    MinLength: '1'
    MaxLength: '2048'
    AllowedPattern: '[a-zA-Z0-9]*'
    Description: HashType PrimaryKey Name
    Default: Id
    ConstraintDescription: must contain only alphanumeric characters
  pDynamoDBPKType:
    Type: String
    MinLength: '1'
    MaxLength: '1'
    AllowedPattern: '[S|N]'
    Description: HashType PrimaryKey Type
    Default: S
    ConstraintDescription: must be either S or N
  pDynamoDBJokeName:
    Type: String
    MaxLength: '2048'
    Description: Name
    Default: JokeText
  pDynamoDBJokeType:
    Type: String
    Description: Type
    Default: S
  pReadCapacityUnits:
    Type: Number
    MinValue: '1'
    MaxValue: '100'
    Description: Provisioned read throughput
    Default: '1'
    ConstraintDescription: must be between 1 and 100
  pWriteCapacityUnits:
    Type: Number
    MinValue: '1'
    MaxValue: '100'
    Description: Provisioned write throughput
    Default: '1'
    ConstraintDescription: must be between 1 and 100

  # Lambda
  pLambdaExecutionRoleName:
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[\w+=,.@-]+'
    Description: The name of the lambda execution role.
    Default: Lambda-Role-DadJokes
  pLambdaExecutionPolicyName:
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[\w+=,.@-]+'
    Description: The name of the lambda execution policy.
    Default: Lambda-Policy-DadJokes
  pLambdaFunctionNameRandom:
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9_-]*'
    Description: The name of the lambda function to return random results.
    Default: Lambda-DynamoDB-DadJokes-GetRandom

  # Api Gateway
  pApiGatewayRoleName:
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[\w+=,.@-]+'
    Description: The name of the API Gateway lambda execution role.
    Default: ApiGatewayLambdaCallerRole
  pApiGatewayPolicyName:
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[\w+=,.@-]+'
    Description: The name of the API Gateway lambda execution policy.
    Default: ApiGatewayLambdaCallerPolicy
  pApiGatewayName:
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9_-]*'
    Description: The name of the lambda function to return random results.
    Default: DadJokes-HttpApi

Resources:
  # DynamoDB
  rDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref pDynamoDBTableName
      AttributeDefinitions:
      - AttributeName: !Ref pDynamoDBPKName
        AttributeType: !Ref pDynamoDBPKType
      - AttributeName: !Ref pDynamoDBJokeName
        AttributeType: !Ref pDynamoDBJokeType
      KeySchema:
      - AttributeName: !Ref pDynamoDBPKName
        KeyType: HASH
      - AttributeName: !Ref pDynamoDBJokeName
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref pReadCapacityUnits
        WriteCapacityUnits: !Ref pWriteCapacityUnits

  # Lambda
  rLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref pLambdaExecutionRoleName
      Description: The role used by Lambda to log to cloudwatch.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
  rLambdaExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Ref pLambdaExecutionPolicyName
      Roles:
      - !Ref rLambdaExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - Logs:CreateLogGroup
          Resource:
          - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: !Join ['',['arn:', !Ref AWS::Partition, ':logs:', !Ref AWS::Region, ':', !Ref AWS::AccountId, ':log-group:/aws/lambda/', !Ref pLambdaFunctionNameRandom, ':*']]
  rLambdaGetRandom:
    Type: AWS::Lambda::Function
    DependsOn: rLambdaExecutionRole
    Properties:
      FunctionName: !Ref pLambdaFunctionNameRandom
      Architectures:
      - arm64
      Description: Retrieves a random dad joke from DynamoDB. Returns a JSON object.
      Role:
        !GetAtt rLambdaExecutionRole.Arn
      Runtime: nodejs18.x
      Handler: index.handler
      Code: /development/djaas/aws/lambda/random

  # Api Gateway
  rApiGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref pApiGatewayRoleName
      Description: The role used by API Gateway to handle calls to Lambda functions
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
  rApiGatewayPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Ref pApiGatewayPolicyName
      Roles:
      - !Ref rApiGatewayRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - lambda:InvokeFunction
          - lambda:InvokeAsync
          - lambda:GetFunction
          Resource:
          - !GetAtt rLambdaGetRandom.Arn
  rApiGateway:
    Type: AWS::ApiGatewayV2::Api
    DependsOn:
    - rApiGatewayRole
    - rLambdaGetRandom
    Properties:
      BodyS3Location:
        Bucket: !Ref pAssetS3BucketName
        Key: 'schema.yaml'
  rApiGatewayStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !GetAtt rApiGateway.ApiId
      StageName: dev
  rApiGatewayStageDeploy:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn: rApiGatewayStage
    Properties:
      ApiId: !GetAtt rApiGateway.ApiId
      Description: The default deployment stage for DadJokesHTTPApi.
      StageName: dev
Outputs:
  oDynamoDBTable:
    Value:
      Ref: rDynamoDBTable
    Description: Newly created Dad Jokes DynamoDB table.
