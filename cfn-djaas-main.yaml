AWSTemplateFormatVersion: '2010-09-09'
Description: Dad jokes as a service
Parameters:
  # S3
  pS3AssetBucketName:
    Type: String
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: '[a-zA-Z0-9_-]+'
    Description: The S3 bucket which holds the assets used by the cloudformation template
    Default: djaas-main
  pS3WebsiteStaticUrl:
    Type: String
    Description: The Static URL for the S3 bucket which holds the website
    Default: jokes.forge.id.au.s3-website-ap-southeast-2.amazonaws.com

  # AWS Certificate Manager
  pACMSSLCertificateARN:
    Type: String
    Description: The ARN of the SSL certificate used by cloudfront
    Default: "arn:aws:acm:us-east-1:723104728616:certificate/a4a12b80-2bad-48a0-b704-f3fb150de9e9"

  # DynamoDB
  pDynamoDBTableName:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    AllowedPattern: '[a-zA-Z0-9_.-]+'
    Description: The name of the Dad Jokes DynamoDB Table
    Default: Dad_Jokes
  pDynamoDBPKName:
    Type: String
    MinLength: '1'
    MaxLength: '2048'
    AllowedPattern: '[a-zA-Z0-9]*'
    Description: HashType PrimaryKey Name
    Default: Id
    ConstraintDescription: must contain only alphanumeric characters
  pDynamoDBPKType:
    Type: String
    MinLength: '1'
    MaxLength: '1'
    AllowedPattern: '[S|N]'
    Description: HashType PrimaryKey Type
    Default: N
    ConstraintDescription: must be either S or N
  pReadCapacityUnits:
    Type: Number
    MinValue: '1'
    MaxValue: '100'
    Description: Provisioned read throughput
    Default: '5'
    ConstraintDescription: must be between 1 and 100
  pWriteCapacityUnits:
    Type: Number
    MinValue: '1'
    MaxValue: '100'
    Description: Provisioned write throughput
    Default: '5'
    ConstraintDescription: must be between 1 and 100

  # Lambda
  pLambdaExecutionRoleName:
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[\w+=,.@-]+'
    Description: The name of the lambda execution role.
    Default: Lambda-Role-DadJokes
  pLambdaExecutionPolicyName:
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[\w+=,.@-]+'
    Description: The name of the lambda execution policy.
    Default: Lambda-Policy-DadJokes
  pLambdaFunctionNameRandom:
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9_-]*'
    Description: The name of the lambda function to return random results.
    Default: Lambda-DynamoDB-DadJokes-GetRandom

  # Api Gateway
  pApiGatewayRoleName:
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[\w+=,.@-]+'
    Description: The name of the API Gateway lambda execution role.
    Default: ApiGatewayLambdaCallerRole
  pApiGatewayPolicyName:
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[\w+=,.@-]+'
    Description: The name of the API Gateway lambda execution policy.
    Default: ApiGatewayLambdaCallerPolicy
  pApiGatewayName:
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9_-]*'
    Description: The name of the lambda function to return random results.
    Default: DadJokes-HttpApi
  pApiGatewayDeploymentStageName:
    Type: String
    Description: The API Gateway deployment stage name
    Default: dev

  # Cloudfront
  pCloudFrontCNameAlias:
    Type: String
    Description: A list of aliases the cloudfront distribution will handle
    Default: "jokes.forge.id.au"
  pCloudFrontDefaultRoot:
    Type: String
    Description: The default root object to display when root requests are received 
    Default: index.html
  pCloudFrontAPIGatewayOriginId:
    Type: String
    Description: An identifier used across cloudfront to link the API Gateway's origins and behaviours
    Default: "axR7jyo2i51L"
  pCloudFrontWebsiteOriginId:
    Type: String
    Description: An identifier used across cloudfront to link the S3 web hosting's origins and behaviours
    Default: "bszKXqHGjhCQ"

Resources:
  # DynamoDB
  rDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref pDynamoDBTableName
      AttributeDefinitions:
      - AttributeName: !Ref pDynamoDBPKName
        AttributeType: !Ref pDynamoDBPKType
      KeySchema:
      - AttributeName: !Ref pDynamoDBPKName
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref pReadCapacityUnits
        WriteCapacityUnits: !Ref pWriteCapacityUnits

  # Lambda
  rLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref pLambdaExecutionRoleName
      Description: The role used by Lambda to log to cloudwatch.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
  rLambdaExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Ref pLambdaExecutionPolicyName
      Roles:
      - !Ref rLambdaExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - Logs:CreateLogGroup
          Resource:
          - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: !Join ['',['arn:', !Ref AWS::Partition, ':logs:', !Ref AWS::Region, ':', !Ref AWS::AccountId, ':log-group:/aws/lambda/', !Ref pLambdaFunctionNameRandom, ':*']]
        - Effect: Allow
          Action:
            - dynamodb:GetItem
          Resource: !Join  ['',['arn:', !Ref AWS::Partition, ':dynamodb:', !Ref AWS::Region, ':', !Ref AWS::AccountId, ':table/', !Ref pDynamoDBTableName]]
  rLambdaGetRandom:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref pLambdaFunctionNameRandom
      Description: Retrieves a random dad joke from DynamoDB. Returns a JSON object.
      Architectures:
      - arm64
      Role:
        !GetAtt rLambdaExecutionRole.Arn
      Runtime: nodejs18.x
      Handler: index.handler
      Environment:
        Variables:
          DYNAMO_TABLE_NAME: !Ref pDynamoDBTableName
      Code: /development/djaas/aws/lambda/random

  # Api Gateway
  rApiGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref pApiGatewayRoleName
      Description: The role used by API Gateway to handle calls to Lambda functions
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
  rApiGatewayPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Ref pApiGatewayPolicyName
      Roles:
      - !Ref rApiGatewayRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - lambda:InvokeFunction
          - lambda:InvokeAsync
          Resource:
          - !GetAtt rLambdaGetRandom.Arn
  rApiGateway:
    Type: AWS::ApiGatewayV2::Api
    DependsOn:
    - rApiGatewayRole
    - rLambdaGetRandom
    Properties:
      BodyS3Location:
        Bucket: !Ref pS3AssetBucketName
        Key: 'schema.yaml'
  rApiGatewayStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !GetAtt rApiGateway.ApiId
      StageName: !Ref pApiGatewayDeploymentStageName
  rApiGatewayStageDeploy:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - rApiGatewayStage
    - rLambdaGetRandom
    Properties:
      ApiId: !GetAtt rApiGateway.ApiId
      Description: The default deployment stage for DadJokesHTTPApi.
      StageName: !Ref pApiGatewayDeploymentStageName

  # Cloudfront
  rCloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig: 
        Enabled: true
        Aliases: !Split [",", !Ref pCloudFrontCNameAlias]
        DefaultRootObject: !Ref pCloudFrontDefaultRoot
        DefaultCacheBehavior:
          TargetOriginId: !Ref pCloudFrontWebsiteOriginId
          # AWS Managed "CachingOptimized" Cache Policy
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          # AWS Managed "CORS-S3Origin" Origin Request Policy
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf
          Compress: true
          AllowedMethods: 
            - GET
            - HEAD
            - OPTIONS
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        Origins:
          - Id: !Ref pCloudFrontWebsiteOriginId
            DomainName: !Ref pS3WebsiteStaticUrl
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
          - Id: !Ref pCloudFrontAPIGatewayOriginId
            DomainName: !Select [1, !Split ["//", !GetAtt rApiGateway.ApiEndpoint]]
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
        CacheBehaviors:
          - TargetOriginId: !Ref pCloudFrontAPIGatewayOriginId
            # AWS Managed "CachingDisabled" Cache Policy
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
            # AWS Managed "SimpleCORS" Response Headers Policy
            ResponseHeadersPolicyId: 60669652-455b-4ae9-85a4-c4c02393f86c
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            PathPattern: !Join ["", ["/", !Ref pApiGatewayDeploymentStageName, "/*"]]
            ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Ref pACMSSLCertificateARN
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only

Outputs:
  oCloudFrontDomainName:
    Value: !GetAtt rCloudFront.DomainName
    Description: CloudFront domain URL for use with a CNAME record.
